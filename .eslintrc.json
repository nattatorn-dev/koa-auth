{
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "extends": "eslint:recommended",
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "jsx": true,
      "modules": true
    }
  },
  "globals": {
    "angular": true,
    "$": true,
    "initGeetest": true,
    "IFlyIatSession": true,
    "AMap": true
  },
 "rules": {
    "camelcase": "error",
    "curly": ["error", "all"],
    "brace-style": ["error", "1tbs"],
    "quotes": ["error", "single"],
    "semi": ["error", "always"],
    "object-curly-spacing": ["error", "never"],
    "array-bracket-spacing": ["error", "never"],
    "computed-property-spacing": ["error", "never"],
    "space-infix-ops": "error",
    "prefer-const": ["error", {
      "destructuring": "any",
      "ignoreReadBeforeAssign": false
    }],
    "no-console": ["error", {
      "allow": ["warn", "error"]
    }],
    "no-alert": "error",
    "no-var": "error",
    "no-new-object": "error",
    // "object-shorthand": ["error", "always"],
    "no-array-constructor": "error",
    "prefer-template": "error",
    "template-curly-spacing": ["error", "never"],
    "no-useless-escape": "error",
    "no-loop-func": "error",
    "prefer-rest-params": "error",
    "no-new-func": "error",
    "space-before-function-paren": ["error", {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always"
    }],
    "space-before-blocks": ["error", "always"],
    "no-param-reassign": ["error", {
      "props": false
    }],
    "prefer-arrow-callback": ["error", {
      "allowNamedFunctions": true,
      "allowUnboundThis": true
    }],
    "arrow-spacing": ["error", {
      "before": true,
      "after": true
    }],
    "arrow-parens": ["error", "as-needed", {
      "requireForBlockBody": true
    }],
    "arrow-body-style": ["error", "as-needed", {
      "requireReturnForObjectLiteral": false
    }],
    "no-confusing-arrow": ["error", {
      "allowParens": true
    }],
    "no-useless-constructor": "error",
    "no-duplicate-imports": "error",
    "no-iterator": "error",
    "no-restricted-syntax": ["error", "WithStatement", "BinaryExpression[operator='in']"],
    "dot-notation": "error",
    "no-undef": "error",
    "one-var": ["error", "never"],
    "no-plusplus": ["error", {
      "allowForLoopAfterthoughts": true
    }],
    "eqeqeq": ["error", "always"]
  }
}
